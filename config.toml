# Modern Sienna Power System Simulation Configuration
# Cleaned and simplified version - maintains custom formulations

[project]
name = "South African Power System 2030"
description = "South African power system dispatch model for 2030 scenario using modern Sienna ecosystem"
version = "2.0.0"
author = "Power Systems Team"
created_date = "2025-01-27"

[paths]
# Primary data directory containing CSV files (bus.csv, gen.csv, load.csv, etc.)
data_directory = "~/showcase/Sienna/networks/TEST/dispatch_2030/"
# Output directories for results and exports
output_directory = "~/showcase/Sienna/sienna_simulation_results"
export_directory = "~/showcase/Sienna/sienna_exported_systems"
# Optional: Time series data directory
timeseries_directory = ""

[system_building]
# PowerSystems.jl system parameters
base_power = 100.0         # MW - system base power
default_voltage = 400.0    # kV - default bus voltage when not specified
validate_system = true     # Validate system after building
load_timeseries = true     # Set to true when you have time series data

[system_building.areas]
# Area creation strategy
area_strategy = "per_bus"  # Recommended for CopperPlatePowerModel
default_area_name = "south_africa_system"
validate_area_assignments = true
allow_unassigned_buses = false

[system_building.fuel_mapping]
thermal_fuels = [
    "COAL", 
    "NATURAL_GAS", 
    "DIESEL", 
    "NUCLEAR", 
    "BIOMASS", 
    "OIL",
    "GAS"
]
renewable_fuels = [
    "WIND", 
    "SOLAR", 
    "HYDRO", 
    "GEOTHERMAL",
    "SOLAR_PV",
    "SOLAR_CSP",
    "WIND_ONSHORE",
    "WIND_OFFSHORE"
]

[system_building.defaults]
thermal_variable_cost = 50.0    # R/MWh (ZAR per MWh)
thermal_startup_cost = 1000.0   # R per startup
thermal_shutdown_cost = 0.0     # R per shutdown
renewable_variable_cost = 0.0   # R/MWh (typically zero for renewables)
thermal_ramp_rate = 100.0       # MW/hour default ramp rate
thermal_min_power_fraction = 0.3  # Minimum power as fraction of max_power
renewable_min_power_fraction = 0.0 # Minimum power as fraction of max_power

[simulations]
# Main simulation control
lookahead_hours = 24
interval_hours = 24
total_steps = 7
initial_time = "2030-01-01"  # Start date for simulation
resolution = 1 # Resolution in hours for time series data
enable_multistage_simulation = false
save_results = true
enable_warm_start = true          # Use warm start for faster solving


# For MT (Medium-Term) simulation parameters
mt_horizon_days = 365
mt_typical_days = 12
mt_resolution_hours = 4

# Economic dispatch vs Unit commitment preferences
run_economic_dispatch = true
run_unit_commitment = false
run_comparison = false

# Custom formulations (keeping these since defaults don't work)
use_default_templates = false
use_custom_templates = true

[formulations.economic_dispatch]
# Economic Dispatch formulations (faster, LP-based)
thermal_standard = "ThermalBasicDispatch"
renewable_dispatch = "RenewableFullDispatch"
renewable_nondispatch = "FixedOutput"
hydro_dispatch = "RenewableFullDispatch"
hydro_energy_reservoir = "RenewableFullDispatch"
generic_battery = "StorageDispatchWithReserves" 
power_load = "StaticPowerLoad"
interruptible_load = "PowerLoadInterruption"
line = "StaticBranch"
transformer = "StaticBranch"
tap_transformer = "StaticBranch"
dc_line = "HVDCTwoTerminalDispatch"


[formulations.unit_commitment]
# Unit Commitment formulations (more detailed, MILP-based)
thermal_standard = "ThermalBasicUnitCommitment"
renewable_dispatch = "RenewableFullDispatch"
renewable_nondispatch = "FixedOutput"
hydro_dispatch = "RenewableFullDispatch"
hydro_energy_reservoir = "RenewableFullDispatch"
generic_battery = "StorageDispatchWithReserves" 
power_load = "StaticPowerLoad"
interruptible_load = "PowerLoadInterruption"
line = "StaticBranch"
transformer = "StaticBranch"
tap_transformer = "StaticBranch"
dc_line = "HVDCTwoTerminalDispatch"

[network]
# Network model configuration
model = "DCPPowerModel"  # "CopperPlatePowerModel", "DCPPowerModel", etc.
enable_transmission_limits = true
transmission_contingency = false
use_slacks = true
add_slack_variables = true
slack_penalty = 1000000.0

[solver]
# HiGHS solver settings
name = "HiGHS"
time_limit_ed = 300.0      # seconds for Economic Dispatch
time_limit_uc = 600.0      # seconds for Unit Commitment
mip_gap_ed = 0.01          # MIP gap for Economic Dispatch
mip_gap_uc = 0.02          # MIP gap for Unit Commitment
threads = 0                # 0 = auto-detect
output_flag = false        # Set true for debugging
presolve = "on"
parallel = "on"

[output]
# Results and output configuration
save_all_variables = true     # Save all variables for PowerAnalytics.jl
save_csv_variables = true     # Save variables as CSV files
save_json_summary = true      # Save JSON summary of results
create_timestamped_folders = true  # Create timestamped result folders
compress_results = false      # Compress result files

# Debug and model export
export_optimization_model = true  # Export .mps/.lp files
save_solver_logs = true           # Save detailed solver output
save_constraint_breakdown = true  # Export constraint analysis
save_variable_breakdown = true    # Export variable analysis

[validation]
# System validation rules
check_power_balance = true
check_voltage_limits = true
check_thermal_limits = true
check_ramp_limits = true
check_time_series_consistency = true

# Sanity check limits
max_generation_capacity = 100000.0  # MW
max_load = 50000.0                  # MW
max_single_generator = 5000.0       # MW
min_reserve_margin = 0.15           # 15% minimum

[regional]
# South African specific settings
country = "South Africa"
timezone = "SAST"
currency = "ZAR"
load_shedding_cost = 100000.0  # R/MWh

[logging]
level = "Info"              # "Debug", "Info", "Warn", "Error"
log_to_file = false
show_solver_output = false
log_build_time = true
log_solve_time = true

[debugging]
store_variable_names = true       # Store variable names (increases memory)
